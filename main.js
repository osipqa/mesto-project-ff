/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function r(r){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?e(Object(o),!0).forEach((function(e){var n,u,c;n=r,u=e,c=o[e],(u=function(e){var r=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(r)?r:String(r)}(u))in n?Object.defineProperty(n,u,{value:c,enumerable:!0,configurable:!0,writable:!0}):n[u]=c})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(o)):e(Object(o)).forEach((function(t){Object.defineProperty(r,t,Object.getOwnPropertyDescriptor(o,t))}))}return r}function n(){n=function(){return r};var e,r={},o=Object.prototype,u=o.hasOwnProperty,c=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",s=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function p(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{p({},"")}catch(e){p=function(t,e,r){return t[e]=r}}function f(t,e,r,n){var o=e&&e.prototype instanceof b?e:b,u=Object.create(o.prototype),a=new T(n||[]);return c(u,"_invoke",{value:j(t,r,a)}),u}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}r.wrap=f;var d="suspendedStart",y="suspendedYield",v="executing",m="completed",_={};function b(){}function g(){}function w(){}var x={};p(x,i,(function(){return this}));var S=Object.getPrototypeOf,E=S&&S(S(A([])));E&&E!==o&&u.call(E,i)&&(x=E);var k=w.prototype=b.prototype=Object.create(x);function L(t){["next","throw","return"].forEach((function(e){p(t,e,(function(t){return this._invoke(e,t)}))}))}function q(e,r){function n(o,c,a,i){var s=h(e[o],e,c);if("throw"!==s.type){var l=s.arg,p=l.value;return p&&"object"==t(p)&&u.call(p,"__await")?r.resolve(p.__await).then((function(t){n("next",t,a,i)}),(function(t){n("throw",t,a,i)})):r.resolve(p).then((function(t){l.value=t,a(l)}),(function(t){return n("throw",t,a,i)}))}i(s.arg)}var o;c(this,"_invoke",{value:function(t,e){function u(){return new r((function(r,o){n(t,e,r,o)}))}return o=o?o.then(u,u):u()}})}function j(t,r,n){var o=d;return function(u,c){if(o===v)throw new Error("Generator is already running");if(o===m){if("throw"===u)throw c;return{value:e,done:!0}}for(n.method=u,n.arg=c;;){var a=n.delegate;if(a){var i=O(a,n);if(i){if(i===_)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===d)throw o=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=v;var s=h(t,r,n);if("normal"===s.type){if(o=n.done?m:y,s.arg===_)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(o=m,n.method="throw",n.arg=s.arg)}}}function O(t,r){var n=r.method,o=t.iterator[n];if(o===e)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=e,O(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),_;var u=h(o,t.iterator,r.arg);if("throw"===u.type)return r.method="throw",r.arg=u.arg,r.delegate=null,_;var c=u.arg;return c?c.done?(r[t.resultName]=c.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=e),r.delegate=null,_):c:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,_)}function C(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function P(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function T(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(C,this),this.reset(!0)}function A(r){if(r||""===r){var n=r[i];if(n)return n.call(r);if("function"==typeof r.next)return r;if(!isNaN(r.length)){var o=-1,c=function t(){for(;++o<r.length;)if(u.call(r,o))return t.value=r[o],t.done=!1,t;return t.value=e,t.done=!0,t};return c.next=c}}throw new TypeError(t(r)+" is not iterable")}return g.prototype=w,c(k,"constructor",{value:w,configurable:!0}),c(w,"constructor",{value:g,configurable:!0}),g.displayName=p(w,l,"GeneratorFunction"),r.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},r.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,w):(t.__proto__=w,p(t,l,"GeneratorFunction")),t.prototype=Object.create(k),t},r.awrap=function(t){return{__await:t}},L(q.prototype),p(q.prototype,s,(function(){return this})),r.AsyncIterator=q,r.async=function(t,e,n,o,u){void 0===u&&(u=Promise);var c=new q(f(t,e,n,o),u);return r.isGeneratorFunction(e)?c:c.next().then((function(t){return t.done?t.value:c.next()}))},L(k),p(k,l,"Generator"),p(k,i,(function(){return this})),p(k,"toString",(function(){return"[object Generator]"})),r.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},r.values=A,T.prototype={constructor:T,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(P),!t)for(var r in this)"t"===r.charAt(0)&&u.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function n(n,o){return a.type="throw",a.arg=t,r.next=n,o&&(r.method="next",r.arg=e),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var c=this.tryEntries[o],a=c.completion;if("root"===c.tryLoc)return n("end");if(c.tryLoc<=this.prev){var i=u.call(c,"catchLoc"),s=u.call(c,"finallyLoc");if(i&&s){if(this.prev<c.catchLoc)return n(c.catchLoc,!0);if(this.prev<c.finallyLoc)return n(c.finallyLoc)}else if(i){if(this.prev<c.catchLoc)return n(c.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return n(c.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&u.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var c=o?o.completion:{};return c.type=t,c.arg=e,o?(this.method="next",this.next=o.finallyLoc,_):this.complete(c)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),_},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),P(r),_}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;P(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,r,n){return this.delegate={iterator:A(t),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=e),_}},r}function o(t,e,r,n,o,u,c){try{var a=t[u](c),i=a.value}catch(t){return void r(t)}a.done?e(i):Promise.resolve(i).then(n,o)}function u(t){return function(){var e=this,r=arguments;return new Promise((function(n,u){var c=t.apply(e,r);function a(t){o(c,n,u,a,i,"next",t)}function i(t){o(c,n,u,a,i,"throw",t)}a(void 0)}))}}var c={baseUrl:"https://nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"637888a1-9ced-4570-b92f-3c1ad708077b","Content-Type":"application/json"}};function a(){return a=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch("".concat(c.baseUrl).concat(e),{method:"GET",headers:c.headers}).then(function(){var t=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.json();case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()).catch(function(){var t=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.reject("Error: ".concat(e.status));case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}());case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)}))),a.apply(this,arguments)}function i(){return i=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch("".concat(c.baseUrl).concat(e),{method:"GET",headers:c.headers}).then(function(){var t=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.json();case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()).catch(function(){var t=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.reject("Error: ".concat(e.status));case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}());case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)}))),i.apply(this,arguments)}function s(t,e){return l.apply(this,arguments)}function l(){return l=u(n().mark((function t(e,o){var a,i,s=arguments;return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=s.length>2&&void 0!==s[2]?s[2]:"POST",i=s.length>3?s[3]:void 0,t.next=4,fetch("".concat(c.baseUrl).concat(e),{method:a,headers:r(r({},c.headers),{},{Authorization:i||c.headers.authorization}),body:JSON.stringify(o)}).then(function(){var t=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e.ok){t.next=2;break}throw new Error("Error: ".concat(e.status));case 2:return t.next=4,e.json();case 4:return t.abrupt("return",t.sent);case 5:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()).catch(function(){var t=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.reject(e.message);case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}());case 4:return t.abrupt("return",t.sent);case 5:case"end":return t.stop()}}),t)}))),l.apply(this,arguments)}function p(){return p=u(n().mark((function t(e,r){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s("/users/me",{name:e,about:r},"PATCH");case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)}))),p.apply(this,arguments)}function f(){return(f=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s("/users/me/avatar",{avatar:e},"PATCH");case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function h(){return(h=u(n().mark((function t(e,r){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s("/cards",{name:e,link:r});case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function d(){return(d=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s("/cards/".concat(e),{},"DELETE");case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function y(){return(y=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s("/cards/likes/".concat(e._id),{},"DELETE");case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function v(){return(v=u(n().mark((function t(e){return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,s("/cards/likes/".concat(e._id),{},"PUT");case 2:return t.abrupt("return",t.sent);case 3:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var m=document.querySelector("#card-template").content.querySelector(".places__item");function _(t,e,r,n,o){var u=m.cloneNode(!0),c=u.querySelector(".card__delete-button"),a=u.querySelector(".card__image"),i=u.querySelector(".card__title"),s=u.querySelector(".card__like-button"),l=u.querySelector(".card__like-count");return a.src=t.link,i.alt=t.name,i.textContent=t.name,l.textContent=t.likes.length,a.addEventListener("click",(function(){return r(t)})),s.addEventListener("click",(function(){return n(t,o,u)})),u.id=t._id,t.owner&&o!==t.owner._id?c.remove():c.addEventListener("click",(function(){e(t)})),x(t,o)?s.classList.add("card__like-button_is-active"):s.classList.remove("card__like-button_is-active"),u}function b(t,e,r){var n=r.querySelector(".card__like-button"),o=r.querySelector(".card__like-count");x(t,e)?function(t){return y.apply(this,arguments)}(t).then((function(e){g(e,n,o),t.likes=e.likes})).catch(w):function(t){return v.apply(this,arguments)}(t).then((function(e){g(e,n,o),t.likes=e.likes})).catch(w)}function g(t,e,r){e.classList.toggle("card__like-button_is-active"),r.textContent=t.likes.length}function w(t){console.log("Error message: ".concat(t))}function x(t,e){return t.likes.some((function(t){return t._id===e}))}function S(t){t.classList.add("popup_is-opened"),document.addEventListener("keydown",k)}function E(t){t.classList.remove("popup_is-opened"),document.removeEventListener("keydown",k)}function k(t){"Escape"===t.code&&E(document.querySelector(".popup_is-opened"))}var L=function(t){return t.some((function(t){return!t.validity.valid}))};function q(t,e,r){var n=r.inputErrorClass,o=r.errorClass,u=t.querySelector(".".concat(e.id,"-error"));e.classList.remove(n),u.classList.remove(o),u.textContent=""}function j(t,e,r){L(t)?(e.disabled=!0,e.classList.add(r.inactiveButtonClass)):(e.disabled=!1,e.classList.remove(r.inactiveButtonClass))}function O(t,e){var r=Array.from(t.querySelectorAll(e.inputSelector)),n=t.querySelector(e.submitButtonSelector);r.forEach((function(r){q(t,r,e)})),j(r,n,e)}function C(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var P=document.querySelector(".places__list"),T=document.querySelector(".profile__edit-button"),A=document.querySelector(".profile__add-button"),I=document.querySelector(".profile__image"),D=document.querySelector(".popup__avatar"),G=document.getElementById("link-avatar-input"),N=document.querySelector(".popup_delete-image"),B=N.querySelector(".popup__button"),U=D.querySelector(".popup__button"),F=document.querySelector(".popup_type_new-card"),M=document.querySelector(".popup_type_image"),z=M.querySelector(".popup__image"),H=document.querySelector(".popup__caption"),V=document.querySelector(".profile__title"),Y=document.querySelector(".profile__description"),J=document.querySelector(".popup_type_edit"),$=J.querySelector(".popup__button"),K=J.querySelector(".popup__form"),Q=K.querySelector(".popup__input_type_name"),R=K.querySelector(".popup__input_type_description"),W=document.querySelectorAll(".popup"),X=F.querySelector(".popup__button"),Z=F.querySelector(".popup__input_type_card-name"),tt=F.querySelector(".popup__input_type_url"),et={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function rt(t){S(N),B.dataset.cardId=t._id}function nt(t){z.alt=t.name,H.textContent=t.name,z.src=t.link,S(M)}function ot(t,e){e.textContent=t?"Сохранение...":e.dataset.buttonText}W.forEach((function(t){t.addEventListener("mouseup",(function(e){var r=e.target,n=e.currentTarget;(r.classList.contains("popup__close")||r===n)&&E(t)}))})),Promise.all([function(t){return a.apply(this,arguments)}("/users/me"),function(t){return i.apply(this,arguments)}("/cards")]).then((function(t){var e,r,n=(r=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,u,c,a=[],i=!0,s=!1;try{if(u=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;i=!1}else for(;!(i=(n=u.call(r)).done)&&(a.push(n.value),a.length!==e);i=!0);}catch(t){s=!0,o=t}finally{try{if(!i&&null!=r.return&&(c=r.return(),Object(c)!==c))return}finally{if(s)throw o}}return a}}(e,r)||function(t,e){if(t){if("string"==typeof t)return C(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?C(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],u=n[1];V.textContent=o.name,Y.textContent=o.about,I.style="background-image: url('".concat(o.avatar,"')"),console.log("Current user ID:",o._id),u.forEach((function(t){return P.append(_(t,rt,nt,b,o._id))}))})).catch((function(t){return Promise.reject("Error: ".concat(t.status))})),T.addEventListener("click",(function(){Q.value=V.textContent,R.value=Y.textContent,O(J,et),S(J)})),A.addEventListener("click",(function(){O(F,et),S(F)})),I.addEventListener("click",(function(){G.value="",O(D,et),S(D)})),F.addEventListener("submit",(function(t){t.preventDefault(),ot(!0,X),function(t,e){return h.apply(this,arguments)}(Z.value,tt.value).then((function(t){P.append(_(t,rt,nt,b,ID))})).catch((function(t){return console.log(t)})).finally((function(){ot(!1,X),E(F)})),F.querySelector(".popup__form").reset()})),K.addEventListener("submit",(function(t){t.preventDefault(),ot(!0,$),V.textContent=Q.value,Y.textContent=R.value,function(t,e){return p.apply(this,arguments)}(Q.value,R.value).then((function(t){t&&t.name&&t.about&&(V.textContent=t.name,Y.textContent=t.about)})).catch((function(t){return console.log(t)})).finally((function(){ot(!1,$),E(J)}))})),D.addEventListener("submit",(function(t){t.preventDefault(),ot(!0,U),function(t){return f.apply(this,arguments)}(G.value).then((function(t){I.style="background-image: url('".concat(t.avatar,"')")})).catch((function(t){return console.log(t)})).finally((function(){ot(!1,U),E(D)}))})),B.addEventListener("click",(function(t){t.preventDefault(),ot(!0,B);var e=B.dataset.cardId;(function(t){return d.apply(this,arguments)})(e).then((function(){var t=document.getElementById(e);t&&(t.remove(),B.dataset.cardId="",ot(!1,B),E(N))})).catch((function(t){return console.log(t)}))})),function(t){Array.from(document.querySelectorAll(t.formSelector)).forEach((function(e){!function(t,e){var r=Array.from(t.querySelectorAll(e.inputSelector)),n=t.querySelector(e.submitButtonSelector);r.forEach((function(o){o.addEventListener("input",(function(){!function(t,e,r){e.validity.patternMismatch?e.setCustomValidity(e.dataset.errorMessage):e.setCustomValidity(""),e.validity.valid?q(t,e,r):function(t,e,r,n){var o=n.inputErrorClass,u=n.errorClass,c=t.querySelector(".".concat(e.id,"-error"));e.classList.add(o),c.classList.add(u),c.textContent=r}(t,e,e.validationMessage,r)}(t,o,e),j(r,n,e)}))}))}(e,t)}))}(et)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,