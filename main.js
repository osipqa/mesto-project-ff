(()=>{"use strict";var e={baseUrl:"https://nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"637888a1-9ced-4570-b92f-3c1ad708077b","Content-Type":"application/json"}};function t(t,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"POST";return fetch("".concat(e.baseUrl).concat(t),{method:o,headers:e.headers,body:JSON.stringify(n)}).then((function(e){return e.json()})).then((function(e){return console.log(e),e}))}var n=document.querySelector("#card-template").content.querySelector(".places__item");function o(e,t,o,r,c){var u=n.cloneNode(!0),a=u.querySelector(".card__delete-button"),i=u.querySelector(".card__image"),l=u.querySelector(".card__title"),s=u.querySelector(".card__like-button"),d=u.querySelector(".card__like-count");return i.src=e.link,l.alt=e.name,l.textContent=e.name,d.textContent=e.likes.length,i.addEventListener("click",(function(){return o(e)})),s.addEventListener("click",(function(){return r(e,c,u)})),u.id=e._id,e.owner&&c!==e.owner._id?a.remove():a.addEventListener("click",(function(){t(e)})),u}function r(e,n,o){var r,c=o.querySelector(".card__like-button"),u=o.querySelector(".card__like-count");!function(e,t){return e.likes.some((function(e){return e._id===t}))}(e,n)?function(e){return t("/cards/likes/".concat(e._id),{},"PUT")}(e).then((function(t){c.textContent=t.likes.length,c.classList.add("card__like-button_is-active"),e.likes=t.likes})).catch((function(e){return console.log(e)})):(r=e,t("/cards/likes/".concat(r._id),{},"DELETE")).then((function(t){u.textContent=t.likes.length,c.classList.remove("card__like-button_is-active"),e.likes=t.likes})).catch((function(e){return console.log(e)}))}function c(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",a)}function u(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",a)}function a(e){"Escape"===e.code&&u(document.querySelector(".popup_is-opened"))}var i=function(e){return e.some((function(e){return!e.validity.valid}))};function l(e,t,n){var o=n.inputErrorClass,r=n.errorClass,c=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(o),c.classList.remove(r),c.textContent=""}function s(e,t,n){i(e)?(t.disabled=!0,t.classList.add(n.inactiveButtonClass)):(t.disabled=!1,t.classList.remove(n.inactiveButtonClass))}function d(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);n.forEach((function(n){l(e,n,t)})),s(n,o,t)}var p=document.querySelector(".places__list"),_=document.querySelector(".profile__edit-button"),f=document.querySelector(".profile__add-button"),m=document.querySelector(".profile__image"),v=document.querySelector(".popup__avatar"),y=document.getElementById("link-avatar-input"),S=document.querySelector(".popup_delete-image"),h=S.querySelector(".popup__button"),q=v.querySelector(".popup__button"),b=document.querySelector(".popup_type_new-card"),g=document.querySelector(".popup_type_image"),E=g.querySelector(".popup__image"),C=document.querySelector(".popup__caption"),k=document.querySelector(".profile__title"),L=document.querySelector(".profile__description"),x=document.querySelector(".popup_type_edit"),T=x.querySelector(".popup__button"),A=x.querySelector(".popup__form"),B=A.querySelector(".popup__input_type_name"),D=A.querySelector(".popup__input_type_description"),w=document.querySelectorAll(".popup"),I=b.querySelector(".popup__button"),P=b.querySelector(".popup__input_type_card-name"),U=b.querySelector(".popup__input_type_url"),j={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function M(e,t){t.textContent=e?"Сохранение...":t.dataset.buttonText}function G(e){c(S),h.dataset.cardId=e._id}function H(e){E.alt=e.name,C.textContent=e.name,E.src=e.link,c(g)}w.forEach((function(e){e.addEventListener("mouseup",(function(t){var n=t.target,o=t.currentTarget;(n.classList.contains("popup__close")||n===o)&&u(e)}))})),Promise.all([("/users/me",fetch("".concat(e.baseUrl).concat("/users/me"),{method:"GET",headers:e.headers}).then((function(e){return e.json()})).then((function(e){return console.log(e),e}))),fetch("".concat(e.baseUrl).concat("/cards"),{method:"GET",headers:e.headers}).then((function(e){return e.json()})).then((function(e){return console.log(e),e}))]).then((function(e){console.log(e);var t=e[0],n=e[1].filter((function(e){return e.owner._id===t._id}));k.textContent=e[0].name,L.textContent=e[0].about,m.style="background-image: url('".concat(e[0].avatar,"')"),n.forEach((function(e){return p.append(o(e,G,H,r,t._id))}))})).catch((function(e){return console.log(e)})),_.addEventListener("click",(function(){B.value=k.textContent,D.value=L.textContent,d(x,j),c(x)})),f.addEventListener("click",(function(){d(b,j),c(b)})),m.addEventListener("click",(function(){d(v,j),y.value="",c(v)})),b.addEventListener("submit",(function(e){var n,c;e.preventDefault(),M(!0,I),(n=P.value,c=U.value,t("/cards",{name:n,link:c})).then((function(e){p.append(o(e,G,H,r,ID))})).catch((function(e){return console.log(e)})).finally((function(){M(!1,I),u(b)})),b.querySelector(".popup__form").reset()})),A.addEventListener("submit",(function(e){e.preventDefault(),M(!0,T),k.textContent=B.value,L.textContent=D.value,function(e,n){return t("/users/me",{name:e,about:n},"PATCH")}(B.value,D.value).then((function(e){e&&e.name&&e.about&&(k.textContent=e.name,L.textContent=e.about)})).catch((function(e){return console.log(e)})).finally((function(){M(!1,T),u(x)}))})),v.addEventListener("submit",(function(e){var n;e.preventDefault(),M(!0,q),(n=y.value,t("/users/me/avatar",{avatar:n},"PATCH")).then((function(e){m.style="background-image: url('".concat(e.avatar,"')")})).catch((function(e){return console.log(e)})).finally((function(){M(!1,q),u(v)}))})),h.addEventListener("click",(function(e){e.preventDefault(),M(!0,h);var n,o=h.dataset.cardId;console.log("Card ID to delete:",o),(n=o,t("/cards/".concat(n),{},"DELETE")).then((function(){console.log("Card successfully deleted from server");var e=document.getElementById(o);e&&(e.remove(),h.dataset.cardId="",M(!1,h),u(S))})).catch((function(e){return console.log(e)}))})),function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);n.forEach((function(r){r.addEventListener("input",(function(){!function(e,t,n){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?l(e,t,n):function(e,t,n,o){var r=o.inputErrorClass,c=o.errorClass,u=e.querySelector(".".concat(t.id,"-error"));t.classList.add(r),u.classList.add(c),u.textContent=n}(e,t,t.validationMessage,n)}(e,r,t),s(n,o,t)}))}))}(t,e)}))}(j)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,